{{- if .Values.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}-ui
  labels:
    app: {{ template "app.name" . }}
    component: ui-deployment
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
      run: {{ .Release.Name }}-ui
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        release: {{ .Release.Name }}
        run: {{ .Release.Name }}-ui
    spec:
      imagePullSecrets:
        - name: {{ .Values.cloudProvider.imagePullSecretName }}
      containers:
        - name: {{ .Chart.Name }}-ui
          image: {{ .Values.cloudProvider.dockerRegistryUrl }}/{{ .Values.ui.image }}:{{ .Values.ui.imageTag }}
          imagePullPolicy: {{ .Values.cloudProvider.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /env-config.js
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /env-config.js
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 1
          {{- if .Values.ui.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.ui.resources.limits.cpu }}
              memory: {{ .Values.ui.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ui.resources.requests.cpu }}
              memory: {{ .Values.ui.resources.requests.memory }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "app.fullname" . }}-ui-configmap
{{- end }}
